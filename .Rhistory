source("C:\\Users\\Ricard\\workspace\\Machine_Learning_for_Hackers\\package_installer.R")
q()
library(tm)
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
clear
clear()
library(ggplot2)
matA(data=[1,2,3,4,5,6], nrows=2, ncols=3)
matA(data=(1,2,3,4,5,6), nrows=2, ncols=3)
matA=(data=(1,2,3,4,5,6), nrows=2, ncols=3)
matA=(data=c(1,2,3,4,5,6), nrows=2, ncols=3)
matA=matrix(data=c(1,2,3,4,5,6), nrows=2, ncols=3)
mata
matS
matS
matA
q()
matA=matrix(data=c(1,2,3,4,5,6), nrows=3, ncols=3)
matA=matrix(data=c(1,2,3,4,5,6), rows=3, cols=3)
matA=matrix(data=c(1,2,3,4,5,6); nrows=3; ncols=3)
matA=matrix(data=c(1,2,3,4,5,6))
matA
q()
find_rtools()
library(devtools)
find.package("devtools")
find.package("devtools")
install.packages("devtools")
install.packages("devtools")
pwd
cwd
wd
install.packages("devtools")
install.packages("KernSmooth")
copyright.package("KernSmooth")
?copyright
?package
?package copyright
package.copyright("KernSmooth")
KernSmooth.cph
description("KernSmooth")
library(KernSmooth)
add2 <- function(a,b){}
add2 <- function(a,b){}
add2 <- function(a,b){
a + b
}
add2(3,5)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(Bodyweight)
head(BodyWeight)
?lpoints
plot <- xyplot(weight ~ Time | Diet, BodyWeight)
plot.text("Test")
lpoints("Test")
libray(datasets)
library(datasets)
data(airquality)
p<-xyplot(Ozone ~ Wind | factor(Month), data=airquality)
print(p)
?tellis.par.set()
?splom
?trellis.par.set
?splom
?par
?print.tellis
library(ggplot2)
head(airquality)
qplot(Wind, Ozone, data=airquality, geom="smooth")
qplot(Wind, Ozone, data=airquality, facets= .~factor(Month))
airquality=transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets= .~Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies, panel=panel.loess)
qplot(votes, rating, data=movies) + stats_smooth("loess")
qplot(votes, rating, data=movies, smooth="loess")
qplot(votes,rating,data=movies)+geom_smooth()
qplot(votes, rating, data=movies, panel=panel.loess)
qplot(votes,rating,data=movies)+geom_smooth()
setwd("~/GitHub/RepData_PeerAssessment1")
unzip("activity.zip", "tempdir")
unzip("activity.zip", exdir="tempdir")
unzip("activity.zip", exdir="tempdir")
data <- read.csv("tempdir/activity.csv")
head(data)
summary(data)
hist(steps)
hist(data$steps)
unique(data$date)
hist(data$date)
?hist
hist(data$steps, breaks="date")
hist(data$steps, breaks=5)
hist(data$steps)
?hist
hist(data$steps)
head(data)
plot(data$date, sum(data$steps))
data$datefactor <- as.factor(data$date)
plot(data$datefactor, sum(data$steps))
head(data)
data1<-transform(data, level=datefactor)
head(data1)
hist(data$steps, break=level)
hist(data$steps, breaks=level)
hist(data$steps, breaks=data$level)
plot(data$level, data$steps)
nrwos(data$level)
nrow(data$level)
nrow(data$steps)
nrow(data)
count(data$steps)
len(data$steps)
summary(data$steps)
?transform
?groupby
tapply(data$steps, data$date, FUN=sum)
data2<-tapply(data$steps, data$date, FUN=sum)
hist(data2)
head(data2)
data2
summary(data2)
data2[:1]
class(data2)
index(data2)
level(data2)
data2[1]
aggregate(data$steps, by=list(Category=data$date), FUN=sum)
data3 <- aggregate(data$steps, by=list(Category=data$date), FUN=sum)
hist(data3$steps)
hist(data3$x)
hist(data3$x)
plot(data3$Category, data3$x)
?plot
plot(data3$Category, data3$x, type="h")
?plot
plot(data3$Category, data3$x, type="s")
plot(data3$Category, data3$x, type="l")
plot(data3$Category, data3$x, type="l")
head(data)
data_non_na <- na.rm(data)
data_non_na <- rm.na(data)
agg_data <- aggregate(data$steps, by=list(date=data$date), FUN=sum)
head(agg_data)
any(is.na(data))
data2 <- data[complete.cases(data[,1]),]
head(data2)
any(is.na(data2))
data_wo_nas <- data[complete.cases(data[,1]),]
agg_data <- aggregate(data_wo_nas$steps, by=list(date=data_wo_nas$date), FUN=sum)
head(agg_data)
plot(agg_data$date, agg_data$x)
plot(agg_data$date, agg_data$x)
plot(agg_data$date, agg_data$x, type="b")
plot(agg_data$date, agg_data$x, type="b")
?plot
plot(agg_data$date, agg_data$x, type="h")
barplot(agg_data$date, agg_data$x)
barplot(agg_data$x, agg_data$date)
class(agg_data$x)
barplot(agg_data$x)
barplot(agg_data$x, names=agg_data$date)
mean(agg_data$x)
median(agg_data$x)
head(data)
tail(data)
head(data_wo_nas)
agg_data_by_interval <- aggregate(data_wo_nas$steps, by=list(interval=data_wo_nas$interval), FUN=mean)
head(agg_data_by_interval)
plot(agg_data_by_interval$interval, agg_data_by_interval$x, type="l")
plot(agg_data_by_interval$x, agg_data_by_interval$interval, type="l")
plot(agg_data_by_interval$interval, agg_data_by_interval$x, type="l")
?plot
axis
?axis
plot(agg_data_by_interval$interval, agg_data_by_interval$x, type="l")
axis(1, agg_data_by_interval$interval)
?axis
axis(1, agg_data_by_interval$interval, padj=1)
axis(1, agg_data_by_interval$interval, padj=0)
plot(agg_data_by_interval$interval, agg_data_by_interval$x, type="l")
axis(1, agg_data_by_interval$interval, padj=1)
?axis
plot(agg_data_by_interval$interval, agg_data_by_interval$x, type="l")
max(agg_data_by_interval$x)
agg_data_by_interval$interval[agg_data_by_interval$x==max(agg_data_by_interval$x)]
nrow(data[is.na(data$steps)])
is.na(data$steps)
data[is.na(data$steps)]
data[is.na(data$steps),]
nrow(data[is.na(data$steps),])
head(data)
?where
?with
with(data[is.na(data$steps),], data$steps = agg_data_by_interval[interval==data$interval])
with(data[is.na(data$steps),], data$steps = agg_data_by_interval$steps[interval==data$interval])
with(data[is.na(data$steps),], data$steps <- agg_data_by_interval$steps[interval==data$interval])
with(data[is.na(data$steps),], data$steps <- agg_data_by_interval$steps[agg_dta_by_interaval$interval==data$interval])
with(data[is.na(data$steps),], data$steps <- agg_data_by_interval$steps[agg_dta_by_interval$interval==data$interval])
with(data[is.na(data$steps),], data$steps <- agg_data_by_interval$steps[agg_data_by_interval$interval==data$interval])
head(data)
data[is.na(data$steps),]
with(data[is.na(data$steps),], steps <- agg_data_by_interval$steps[agg_data_by_interval$interval==interval])
head(data)
data[is.na(data$steps),steps]<- agg_data_by_interval$steps[agg_data_by_interval$interval==data$interval]
data[is.na(data$steps),"steps"]<- agg_data_by_interval$steps[agg_data_by_interval$interval==data$interval]
data[is.na(data$steps),1]<- agg_data_by_interval$steps[agg_data_by_interval$interval==data$interval]
head(data)
data[is.na(data$steps),1]
data1<-data
nrow(data1)
data1[is.na(data$steps),1]<-13
head(data1)
data1<-data
head(data)
agg <- agg_data_by_interval
head(agg)
head(data1)
data1[is.na(data$steps),1]<-agg[agg$interval==data$interval,"steps"]
data1[is.na(data$steps),1]<-agg$steps[agg$interval==data$interval]
data1[is.na(data$steps),1]<-data$interval
data1[is.na(data$steps),1]<-agg$steps[agg$interval==data1$interval[is.na(data$steps)]]
data1[is.na(data$steps),1]<-data1$interval[is.na(data$steps)]
head(data1)
data1<-data
data1[is.na(data$steps),1]<-agg$x[agg$interval==data1$interval[is.na(data$steps)]
]
head(data1)
fix_data <- data
head(data)
fix_data[is.na(fix_data$steps),1]<-agg$x[agg$interval==fix_data$interval[is.na(fix_data$steps)]]
agg_fix_data <- aggregate(fix_data$steps, by=list(date=fix_data$date), FUN=sum)
barplot(agg_fix_data$x, names=agg_fix_data$date)
head(fix_data)
fix_mean_steps_by_day <- mean(agg_fix_data$x)
fix_mean_steps_by_day
is.any(is.na[fix_data])
any(is.na[fix_data])
is.na[fix_data]
any(is.na(fix_data)
)
fix_data[is.na(fix_data)]
fix_data[is.na(fix_data$steps),1]
fix_data[is.na(fix_data$steps),1]
head(fix_data)
tail(fix_data)
fix_data<-data
fix_data
head(fix_data)
fix_data[is.na(fix_data$steps),1]
rnrow(fix_data[is.na(fix_data$steps),])
nrow(fix_data[is.na(fix_data$steps),])
unique(fix_data$interval)
nrow(unique(fix_data$interval))
length(unique(fix_data$interval))
head(agg_data_by_interval)
agg<-agg_data_by_interval
length(unique(agg$interval)
)
fix_data[is.na(fix_data$steps),1]<-agg$x[agg$interval==fix_data$interval[is.na(fix_data$steps)]]
nrow(fix_data[is.na(fix_data$steps),])
head(fix_data)
fix_data[is.na(fix_data$steps),]
head(fix_data[is.na(fix_data$steps),])
source(fill_missing_values)
source("fill_missing_values.R")
source("fill_missing_values.R")
fix_data<-data
agg<-agg_data_by_interval
fil_missing_values(fix_data, agg)
fill_missing_values(fix_data, agg)
data[is.na(data$steps),][1]
data[is.na(data$steps),][1,]
data[is.na(data$steps),]
data[is.na(data$steps),][1,]
data[is.na(data$steps),][1,]$steps
for(row in data[is.na(data$steps),]){}
for(row in data[is.na(data$steps),]){row}
for(row in data[is.na(data$steps),]){print row}
for(row in data[is.na(data$steps),]){echo row}
for(row in data[is.na(data$steps),]){row}
for(row in data[is.na(data$steps),]){return row}
for(irow in data[is.na(data$steps),]){irow}
for(irow in data[is.na(data$steps),]){irow$steps}
data[is.na(data$steps)
]
data[is.na(data$steps),]
class(data[is.na(data$steps),])
?tapply
source("fill_missing_values.R")
tapply(fix_data[is.na(fix_data$steps),1],FUN=fill_missing_values(fix_data$interval), agg )
tapply(fix_data[is.na(fix_data$steps),1],FUN=fill_missing_values(fix_data$interval,agg))
fill_missing_values("2350",agg)
apply(fix_data[is.na(fix_data$steps),1],FUN=fill_missing_values(fix_data$interval,agg))
apply(fix_data[is.na(fix_data$steps),1],FUN=fill_missing_values, interval=fix_data$interval, agg=agg)
fix_data[is.na(fix_data$steps),1]
nas <- fix_data[is.na(fix_data$steps),1]
length(nas)
nas
head(agg)
nas2<-apply(fix_data[is.na(fix_data$steps),1],fill_missing_values,
interval=fix_data$interval[is.na(fix_data$steps),1],
agg = agg)
nas2<-apply(fix_data[is.na(fix_data$steps),1],FUN=fill_missing_values,
interval=fix_data$interval[is.na(fix_data$steps),1],
agg = agg)
nas2<-apply(fix_data[is.na(fix_data$steps),1],1,FUN=fill_missing_values,
interval=fix_data$interval[is.na(fix_data$steps),1],
agg = agg)
dim(fix_data[is.na(fix_data$steps),1])
dim(fix_data[is.na(fix_data$steps),])
fill_missing_values(fix_data[is.na(fix_data$steps),1],agg)
fill_missing_values(fix_data[is.na(fix_data$steps),"interval"],agg)
fix_data[is.na(fix_data$steps),"interval"]
fill_missing_values(fix_data[is.na(fix_data$steps),"interval"],agg)
fill_missing_values(fix_data[is.na(fix_data$steps),"interval"],agg)
fix_data[is.na(fix_data$steps),"interval"]
fix_data[is.na(fix_data$steps),"interval"][2301]
fill_missing_values(fix_data[is.na(fix_data$steps),"interval"][2301],agg)
fill_missing_values(fix_data[is.na(fix_data$steps),"interval"],agg)
?qnorm
qnorm(.95, mean = 1100, sd = 75)
qnorm(.70, mean=80, sd=10)
pnorm(70, mean=80, sd=10)
pnorm(80, mean=80, sd=10)
qnorm(.95, mean=1100, sd=7,5)
pnorm(16, mean=15, sd=1)-pnorm(14,mean=15,sd=1)
?poison
?ppoison
ppois(10, lambda=3*5)
